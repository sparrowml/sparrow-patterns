{
    "name": "{{ project_name }}",
    "build": {
        "dockerfile": "../Dockerfile",
        "context": "..",
        "args": {
            "USER": "${localEnv:USER}"
        }
    },
    "containerUser": "1000",
    "customizations": {
        "vscode": {
            "settings": {
                "python.pythonPath": "/usr/local/bin/python",
                "python.languageServer": "Pylance",
                "python.linting.enabled": true,
                // pydocstyle
                "python.linting.pydocstyleEnabled": true,
                "python.linting.pydocstylePath": "/home/${localEnv:USER}/.local/bin/pydocstyle",
                // black
                "python.formatting.blackPath": "/home/${localEnv:USER}/.local/bin/black",
                "python.formatting.provider": "black",
                "[python]": {
                    "editor.formatOnSave": true,
                    "editor.codeActionsOnSave": {
                        "source.organizeImports": true
                    },
                },
                // isort
                "isort.path": ["/home/${localEnv:USER}/.local/bin/isort"],
                // pylint
                "python.linting.pylintEnabled": true,
                "python.linting.pylintPath": "/home/${localEnv:USER}/.local/bin/pylint",
                // pytest
                "python.testing.pytestArgs": [
                    "{{ source_directory }}"
                ],
                "python.testing.pytestEnabled": true,
            },
            "extensions": [
                "GitHub.copilot",
                "ms-python.isort",
                "ms-python.python",
                "ms-python.vscode-pylance",
            ],            
        }
    },
    "mounts": [
        "source=projectname-bashhistory,target=/commandhistory,type=volume",
    ],
    "workspaceFolder": "/code",
    "workspaceMount": "source=${localWorkspaceFolder},target=/code,type=bind,consistency=cached",
    "runArgs": [
        "--ipc=host",{% if gpu %}
        "--gpus=all",{% endif %}
        // "--env-file=.env"
    ],
    "postCreateCommand": "pip install -e .[dev]",
}
